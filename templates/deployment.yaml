apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pihole.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "pihole.name" . }}
    helm.sh/chart: {{ include "pihole.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pihole.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pihole.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml .Values.dnsConfig | nindent 8 }}
      {{- end }}
      hostAliases:
      - ip: 127.0.0.1
        hostnames:
        - pi.hole
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          env:
            - name: ServerIP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DNS1
              value: 1.1.1.1
            - name: DNS2
              value: 1.0.0.1
            - name: VIRTUAL_HOST
              value: {{ required "pihole.virtual_host is needed to know what url to use for admin interface" .Values.pihole.virtual_host | quote }}
            - name: TZ
              value: {{ .Values.pihole.tz | quote }}
            - name: WEBPASSWORD
              value: {{ required "pihole.password needs to be set to get into admin interface" .Values.pihole.password | quote }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: dns
              containerPort: 53
              protocol: TCP
            - name: dns2
              containerPort: 53
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
